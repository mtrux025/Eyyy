#include <STTODRobot.h>
STTODRobot myOmni = STTODRobot();
int IN1 = 22;
int IN2 = 23;
int EN1 = 5;
int IN3 = 24;
int IN4 = 25;
int EN2 = 6;
int IN5 = 26;
int IN6 = 27;
int EN3 = 7;

int a[16] = {A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15};
int b[16];
int value[16];
int vt1,vt2,i,x,k;
float goc;

void setup() {
myOmni.init(IN1, IN2, EN1, IN3, IN4,
EN2, IN5, IN6, EN3);
pinMode (IN1, OUTPUT);
pinMode (IN2, OUTPUT);
pinMode (IN3, OUTPUT);
pinMode (IN4, OUTPUT);
pinMode (IN5, OUTPUT);
pinMode (IN6, OUTPUT);
pinMode (EN1, OUTPUT);
pinMode (EN2, OUTPUT);
pinMode (EN3, OUTPUT);
vt1=0; //Vị trí xe chạy đầu tiên hướng từ con A0
}
void doline(int i) {
  int minSensorVal = 1023;
  int maxSensorVal = 0;
while (millis() < 5000) {
value[i] = analogRead(a[i]);
if (value[i] < minSensorVal) {
(minSensorVal = value[i]);}
if (value[i] > maxSensorVal) {
(maxSensorVal = value[i]);}
}
value[i] = analogRead(a[i]);
value[i] = map(value[i], minSensorVal,
maxSensorVal, 0, 1023);
value[i]=constrain(value[i],0,1023);
}

void loop() {
for (i=0;i<16;i++) {(b[i]=0);};
//Dò 10 cảm biến gần nhất từ vt1
for (x=vt1; x < vt1 +5; x++) {
  if (x>15) { ( k=x-16 ); };
  doline(k);
  if (value[k]>=511.5) {(b[k]=1); } ;
}
for (x=vt1; x > vt1-5  ; x--) { 
  if (x<0) { (k=x+16 ); };
  doline(k);
  if (value[k]>=511.5) { (b[k]=1); } ;
}
for (x=vt1;x<16;x++) {
  if (x>15) {(k1=x-16);} else {(k1=x);} ;
  if (x+1>15) {k2=x+1-16);} else {(k2=x+1);} ;
  if (x+2>15) {k3=x+2-16);} else {(k3=x+2);} ;
  if (b[k1]==1) and (b[k2]==1) and (b[k3]==1) { (vt2=k2); }
}
goc=abs(vt2-vt1)*22.5;
if ( /*chỗ này bí rồiiii*/  ) { myOmni.move_omni(-goc,200); } else { myOmni.move_omni(goc,200);};

vt1=vt2;
}
